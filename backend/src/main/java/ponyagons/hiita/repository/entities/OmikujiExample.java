package ponyagons.hiita.repository.entities;

import java.util.ArrayList;
import java.util.List;

public class OmikujiExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public OmikujiExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOwnerIsNull() {
            addCriterion("owner is null");
            return (Criteria) this;
        }

        public Criteria andOwnerIsNotNull() {
            addCriterion("owner is not null");
            return (Criteria) this;
        }

        public Criteria andOwnerEqualTo(Integer value) {
            addCriterion("owner =", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotEqualTo(Integer value) {
            addCriterion("owner <>", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerGreaterThan(Integer value) {
            addCriterion("owner >", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerGreaterThanOrEqualTo(Integer value) {
            addCriterion("owner >=", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerLessThan(Integer value) {
            addCriterion("owner <", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerLessThanOrEqualTo(Integer value) {
            addCriterion("owner <=", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerIn(List<Integer> values) {
            addCriterion("owner in", values, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotIn(List<Integer> values) {
            addCriterion("owner not in", values, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerBetween(Integer value1, Integer value2) {
            addCriterion("owner between", value1, value2, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotBetween(Integer value1, Integer value2) {
            addCriterion("owner not between", value1, value2, "owner");
            return (Criteria) this;
        }

        public Criteria andShrineIdIsNull() {
            addCriterion("shrine_id is null");
            return (Criteria) this;
        }

        public Criteria andShrineIdIsNotNull() {
            addCriterion("shrine_id is not null");
            return (Criteria) this;
        }

        public Criteria andShrineIdEqualTo(Integer value) {
            addCriterion("shrine_id =", value, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdNotEqualTo(Integer value) {
            addCriterion("shrine_id <>", value, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdGreaterThan(Integer value) {
            addCriterion("shrine_id >", value, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("shrine_id >=", value, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdLessThan(Integer value) {
            addCriterion("shrine_id <", value, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdLessThanOrEqualTo(Integer value) {
            addCriterion("shrine_id <=", value, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdIn(List<Integer> values) {
            addCriterion("shrine_id in", values, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdNotIn(List<Integer> values) {
            addCriterion("shrine_id not in", values, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdBetween(Integer value1, Integer value2) {
            addCriterion("shrine_id between", value1, value2, "shrineId");
            return (Criteria) this;
        }

        public Criteria andShrineIdNotBetween(Integer value1, Integer value2) {
            addCriterion("shrine_id not between", value1, value2, "shrineId");
            return (Criteria) this;
        }

        public Criteria andFortuneIsNull() {
            addCriterion("fortune is null");
            return (Criteria) this;
        }

        public Criteria andFortuneIsNotNull() {
            addCriterion("fortune is not null");
            return (Criteria) this;
        }

        public Criteria andFortuneEqualTo(String value) {
            addCriterion("fortune =", value, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneNotEqualTo(String value) {
            addCriterion("fortune <>", value, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneGreaterThan(String value) {
            addCriterion("fortune >", value, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneGreaterThanOrEqualTo(String value) {
            addCriterion("fortune >=", value, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneLessThan(String value) {
            addCriterion("fortune <", value, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneLessThanOrEqualTo(String value) {
            addCriterion("fortune <=", value, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneLike(String value) {
            addCriterion("fortune like", value, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneNotLike(String value) {
            addCriterion("fortune not like", value, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneIn(List<String> values) {
            addCriterion("fortune in", values, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneNotIn(List<String> values) {
            addCriterion("fortune not in", values, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneBetween(String value1, String value2) {
            addCriterion("fortune between", value1, value2, "fortune");
            return (Criteria) this;
        }

        public Criteria andFortuneNotBetween(String value1, String value2) {
            addCriterion("fortune not between", value1, value2, "fortune");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table omikuji
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table omikuji
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}